c
movements.minimum('amount').to_f.round(2) * -1
c
C
@movements_max_amount
c
@movements_max_amount
c
@test
c
@movements.group(:created_at).count
@movements.group_by(&:created_at).count
@movements.group_by(&:created_at)
c
@movements_amounts_by_expense_items
c
request
c
request
c
request
c
request
c
request
c
request
c
request
c
request
c
request
c
request
c
request
c
request
c
request
c
request
c
request
params
c
movement.id.present?
c
movement.id.present?
c
amount_string
movement.movement_type
c
movement.movement_type
c
movement.movement_type
c
movement.movement_type
c
params['q'].values.filter{ |v| v.present? }.empty?
params['q'].values
params['q']
c
params['q']
c
params['q']
params
c
params
c
params
c
params
c
new_upcoming_deadlines > 0
c
new_upcoming_deadlines
c
new_upcoming_deadlines
c
new_upcoming_deadlines
c
current_page?(counts_path)
